// The provided course information.
const CourseInfo = {
    id: 451,
    name: "Introduction to JavaScript",
  };
  
  // The provided assignment group.
  const AssignmentGroup = {
    id: 12345,
    name: "Fundamentals of JavaScript",
    course_id: 451,
    group_weight: 25,
    assignments: [
      {
        id: 1,
        name: "Declare a Variable",
        due_at: "2023-01-25",
        points_possible: 50,
      },
      {
        id: 2,
        name: "Write a Function",
        due_at: "2023-02-27",
        points_possible: 150,
      },
      {
        id: 3,
        name: "Code the World",
        due_at: "3156-11-15",
        points_possible: 500,
      },
    ],
  };
  
  // The provided learner submission data.
  const LearnerSubmissions = [
    {
      learner_id: 125,
      assignment_id: 1,
      submission: {
        submitted_at: "2023-01-25",
        score: 47,
      },
    },
    {
      learner_id: 125,
      assignment_id: 2,
      submission: {
        submitted_at: "2023-02-12",
        score: 150,
      },
    },
    {
      learner_id: 125,
      assignment_id: 3,
      submission: {
        submitted_at: "2023-01-25",
        score: 400,
      },
    },
    {
      learner_id: 132,
      assignment_id: 1,
      submission: {
        submitted_at: "2023-01-24",
        score: 39,
      },
    },
    {
      learner_id: 132,
      assignment_id: 2,
      submission: {
        submitted_at: "2023-03-07",
        score: 140,
      },
    },
  ];
  
  function getLearnerData(course, ag, submissions) {
    const assignmentDetails = ag.assignments.reduce((acc, assignment) => {
      acc[assignment.id] = {
        points_possible: assignment.points_possible,
        due_at: new Date(assignment.due_at),
      };
      return acc;
    }, {});
  
    const learnerData = {};
  
    submissions.forEach(({ learner_id, assignment_id, submission }) => {
      const assignment = assignmentDetails[assignment_id];
      if (!assignment) {
        // Skip if the assignment does not exist.
        return;
      } else if (new Date() < assignment.due_at) {
        // Skip if the assignment is not yet due.
        return;
      }
  
      if (!learnerData[learner_id]) {
        learnerData[learner_id] = {
          id: learner_id,
          totalScore: 0,
          totalPointsPossible: 0,
          assignment_id: null,
        };
      }
  
      const percentage = submission.score / assignment.points_possible;
  
      learnerData[learner_id].assignment_id = assignment_id;
      learnerData[learner_id].totalScore += submission.score;
      learnerData[learner_id].totalPointsPossible += assignment.points_possible;
    });
  
    return Object.values(learnerData).map(({ id, totalScore, totalPointsPossible, assignment_id }) => {
      return {
        id,
        avg: totalPointsPossible > 0 ? totalScore / totalPointsPossible : 0,
        assignment_id,
      };
    });
  }
  
  const result = getLearnerData(CourseInfo, AssignmentGroup, LearnerSubmissions);
  
  console.log(result);
  
